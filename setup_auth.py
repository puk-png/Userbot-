#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä—à–æ—ó –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó Telegram Userbot
–ó–∞–ø—É—Å—Ç—ñ—Ç—å —Ü–µ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø–µ—Ä–µ–¥ –æ—Å–Ω–æ–≤–Ω–∏–º –±–æ—Ç–æ–º
"""

import asyncio
import os
from telethon import TelegramClient
from config import API_ID, API_HASH, PHONE_NUMBER, PASSWORD, SESSION_NAME

async def setup_authentication():
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó Telegram"""
    print("üîê –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó Telegram Userbot")
    print("=" * 50)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    
    try:
        # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è
        await client.connect()
        print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ Telegram")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
        if await client.is_user_authorized():
            print("‚úÖ –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ!")
            me = await client.get_me()
            username = getattr(me, 'username', '–Ω–µ–º–∞—î')
            first_name = getattr(me, 'first_name', '–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á')
            print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π —è–∫: {first_name} (@{username})")
            return True
        
        print(f"üì± –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∫–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –Ω–∞: {PHONE_NUMBER}")
        
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∫–æ–¥
        await client.send_code_request(PHONE_NUMBER)
        
        # –ó–∞–ø–∏—Ç—É—î–º–æ –∫–æ–¥ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        print("üì≤ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ SMS –∞–±–æ Telegram Desktop/Mobile")
        code = input("–í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è: ").strip()
        
        try:
            # –ê–≤—Ç–æ—Ä–∏–∑—É—î–º–æ—Å—è –∑ –∫–æ–¥–æ–º
            await client.sign_in(PHONE_NUMBER, code)
        except Exception as e:
            if "Two-step verification" in str(e) or "password" in str(e).lower():
                print("üîí –ü–æ—Ç—Ä—ñ–±–µ–Ω –ø–∞—Ä–æ–ª—å –¥–≤–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–æ—ó –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó")
                password = PASSWORD or input("–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ").strip()
                await client.sign_in(password=password)
            else:
                raise e
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É—Å–ø—ñ—à–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
        if await client.is_user_authorized():
            me = await client.get_me()
            username = getattr(me, 'username', '–Ω–µ–º–∞—î')
            first_name = getattr(me, 'first_name', '–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á')
            print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ —è–∫: {first_name} (@{username})")
            print(f"üíæ –°–µ—Å—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —è–∫: {SESSION_NAME}.session")
            return True
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False
    finally:
        try:
            if client.is_connected():
                await client.disconnect()
        except:
            pass

async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    success = await setup_authentication()
    
    if success:
        print("\nüéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        print("‚ñ∂Ô∏è  –¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ—é:")
        print("   python main.py")
    else:
        print("\n‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –Ω–µ –≤–¥–∞–ª–∞—Å—è")
        print("üí° –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –°–∫–∞—Å–æ–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")