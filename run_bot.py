#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—ñ—Å–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
"""

import asyncio
import os
from telethon import TelegramClient
from config import API_ID, API_HASH, SESSION_NAME
from bot_handlers import register_handlers
from web_dashboard import start_web_server
import threading

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—ñ—Å–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram Userbot...")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—É —Å–µ—Å—ñ—ó
    if not os.path.exists(f"{SESSION_NAME}.session"):
        print("‚ùå –§–∞–π–ª —Å–µ—Å—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("üìù –°–ø–æ—á–∞—Ç–∫—É –∑–∞–ø—É—Å—Ç—ñ—Ç—å: python setup_auth.py")
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    
    try:
        # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è
        await client.connect()
        print("üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ Telegram")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
        if not await client.is_user_authorized():
            print("‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ!")
            print("üìù –ó–∞–ø—É—Å—Ç—ñ—Ç—å: python setup_auth.py")
            return
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        me = await client.get_me()
        username = getattr(me, 'username', '–Ω–µ–º–∞—î')
        first_name = getattr(me, 'first_name', '–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á')
        print(f"‚úÖ –£–≤—ñ–π—à–ª–∏ —è–∫: {first_name} (@{username})")
        
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
        bot_status = register_handlers(client)
        bot_status.is_running = True
        
        print("üéØ Userbot –∑–∞–ø—É—â–µ–Ω–æ!")
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:")
        print("‚Ä¢ /gayporn –∞–±–æ /random - –≤–∏–ø–∞–¥–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–∞–Ω–∞–ª—É")
        print("‚Ä¢ /voice (—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–µ) - –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –≥–æ–ª–æ—Å—É –≤ —Ç–µ–∫—Å—Ç")
        print("‚Ä¢ /status - –ø–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞")
        print("\nü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:")
        print("‚Ä¢ –†–µ–∞–∫—Ü—ñ—è ‚ù§Ô∏è‚Äçüî• –Ω–∞ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞")
        print("‚Ä¢ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ '–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ'")
        print("‚Ä¢ –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –∑–≥–∞–¥—É–≤–∞–Ω–Ω—è '–ü—É—Ç—ñ–Ω'")
        print(f"\nüåê –í–µ–±-–¥–∞—à–±–æ—Ä–¥: http://localhost:5000")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
        web_thread = threading.Thread(target=start_web_server, args=(bot_status,))
        web_thread.daemon = True
        web_thread.start()
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
        await client.run_until_disconnected()
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞...")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    finally:
        try:
            if client.is_connected():
                await client.disconnect()
        except:
            pass
        print("üëã Userbot –∑—É–ø–∏–Ω–µ–Ω–æ")

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ü–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: {e}")